/**
 * Script ƒë·ªÉ ƒë·ªìng b·ªô members c·ªßa Household v·ªõi Citizens
 * Ch·∫°y script n√†y ƒë·ªÉ fix d·ªØ li·ªáu c≈©
 */

const mongoose = require("mongoose");
const config = require("../configs");
const { Household, Citizen } = require("../models");

async function syncHouseholdMembers() {
  try {
    console.log("üîÑ B·∫Øt ƒë·∫ßu ƒë·ªìng b·ªô household members...");

    // 1. L·∫•y t·∫•t c·∫£ households
    const households = await Household.find();
    console.log(`üìä T√¨m th·∫•y ${households.length} h·ªô kh·∫©u`);

    // 2. V·ªõi m·ªói household, t√¨m t·∫•t c·∫£ citizens thu·ªôc household ƒë√≥
    for (const household of households) {
      const citizens = await Citizen.find({ household: household._id });

      // T·∫°o m·∫£ng members m·ªõi t·ª´ c√°c citizens
      const memberIds = citizens.map((c) => c._id);

      // C·∫≠p nh·∫≠t household v·ªõi members ƒë·∫ßy ƒë·ªß
      await Household.findByIdAndUpdate(household._id, {
        members: memberIds,
      });

      console.log(
        `‚úÖ Household ${household.code}: ƒê√£ c·∫≠p nh·∫≠t ${memberIds.length} th√†nh vi√™n`
      );
    }

    // 3. L·∫•y t·∫•t c·∫£ citizens c√≥ household nh∆∞ng kh√¥ng c√≥ relationshipToHead
    const citizensWithoutRelationship = await Citizen.find({
      household: { $exists: true, $ne: null },
      relationshipToHead: { $exists: false },
    });

    console.log(
      `\nüìä T√¨m th·∫•y ${citizensWithoutRelationship.length} nh√¢n kh·∫©u ch∆∞a c√≥ quan h·ªá v·ªõi ch·ªß h·ªô`
    );

    // 4. V·ªõi m·ªói household, set relationshipToHead cho head
    for (const household of households) {
      await Citizen.findByIdAndUpdate(household.head, {
        relationshipToHead: "Ch·ªß h·ªô",
        isHead: true,
      });
    }

    console.log("\n‚úÖ Ho√†n th√†nh ƒë·ªìng b·ªô!");
    console.log(
      "üí° L∆∞u √Ω: C√°c nh√¢n kh·∫©u kh√¥ng ph·∫£i ch·ªß h·ªô c·∫ßn ƒë∆∞·ª£c c·∫≠p nh·∫≠t quan h·ªá th·ªß c√¥ng"
    );
  } catch (error) {
    console.error("‚ùå L·ªói khi ƒë·ªìng b·ªô:", error);
  } finally {
    await mongoose.connection.close();
    console.log("\nüëã ƒê√≥ng k·∫øt n·ªëi database");
  }
}

// K·∫øt n·ªëi database v√† ch·∫°y script
mongoose
  .connect(config.mongoURI)
  .then(() => {
    console.log("‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng");
    return syncHouseholdMembers();
  })
  .catch((err) => {
    console.error("‚ùå L·ªói k·∫øt n·ªëi MongoDB:", err);
    process.exit(1);
  });
