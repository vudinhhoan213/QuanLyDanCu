/**
 * Script ƒë·ªÉ link User accounts v·ªõi Citizen profiles
 * D·ª±a v√†o phone number ƒë·ªÉ match User v·ªõi Citizen
 */

require("dotenv").config();
const mongoose = require("mongoose");
const { User, Citizen } = require("../models");

async function linkUsersWithCitizens() {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log("‚úÖ Connected to MongoDB");

    // T√¨m t·∫•t c·∫£ users c√≥ role CONG_DAN
    const users = await User.find({ role: "CONG_DAN" });
    console.log(`üìä Found ${users.length} citizen users`);

    let linked = 0;
    let alreadyLinked = 0;
    let notFound = 0;

    for (const user of users) {
      // T√¨m citizen c√≥ phone number tr√πng v·ªõi username c·ªßa user
      // CH·ªà LINK V·ªöI CITIZEN L√Ä CH·ª¶ H·ªò (isHead: true)
      const citizen = await Citizen.findOne({
        phone: user.username,
        isHead: true,
      });

      if (!citizen) {
        console.log(`‚ö†Ô∏è  No head citizen found for user: ${user.username}`);
        console.log(`   (Ch·ªâ ch·ªß h·ªô m·ªõi c√≥ t√†i kho·∫£n ƒëƒÉng nh·∫≠p)`);
        notFound++;
        continue;
      }

      if (citizen.user && citizen.user.toString() === user._id.toString()) {
        console.log(
          `‚úì  Already linked: ${user.username} ‚Üí ${citizen.fullName} (Ch·ªß h·ªô)`
        );
        alreadyLinked++;
        continue;
      }

      // Link user v·ªõi citizen (ch·ªâ ch·ªß h·ªô)
      citizen.user = user._id;
      await citizen.save();

      console.log(`üîó Linked: ${user.username} ‚Üí ${citizen.fullName} (Ch·ªß h·ªô)`);
      linked++;
    }

    console.log("\n" + "=".repeat(60));
    console.log("üìä Summary:");
    console.log(`   ‚úÖ Newly linked: ${linked}`);
    console.log(`   ‚úì  Already linked: ${alreadyLinked}`);
    console.log(`   ‚ö†Ô∏è  Not found: ${notFound}`);
    console.log("=".repeat(60));

    await mongoose.connection.close();
    console.log("\n‚úÖ Script completed successfully");
  } catch (error) {
    console.error("‚ùå Error:", error);
    process.exit(1);
  }
}

// Run script
linkUsersWithCitizens();
